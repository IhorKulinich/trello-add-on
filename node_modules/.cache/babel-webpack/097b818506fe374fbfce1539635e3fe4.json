{"ast":null,"code":"import _asyncToGenerator from \"/Users/Ihor/Projects/trellopowerapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ConfigService } from \"../services/initialize.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/initialize.service\";\nexport class RealSubject {\n  request() {\n    return true;\n  }\n\n  secondRequest() {\n    return true;\n  }\n\n}\nexport class proxied {\n  constructor(id) {\n    this.id = id;\n    return {\n      \"id\": this.id\n    };\n  }\n\n}\nexport let Proxy = /*#__PURE__*/(() => {\n  class Proxy {\n    constructor(realSubject, prox, httpService) {\n      var _this = this;\n\n      this.prox = prox;\n      this.httpService = httpService;\n      this.request = /*#__PURE__*/_asyncToGenerator(function* () {\n        var iser = yield _this.checkAccess().is;\n        console.log(\"i'm iser: \" + iser);\n\n        if (iser) {\n          _this.status = true;\n          console.log(\"i must call logaccess\");\n\n          _this.logAccess();\n\n          return _this.realSubject.request();\n        } else {\n          return false;\n        }\n      });\n      this.realSubject = realSubject;\n      this.data = prox;\n    }\n\n    secondRequest() {\n      if (this.status) {\n        this.realSubject.request();\n      }\n    }\n\n    checkAccess() {\n      console.log(\"hi,i'm checkAcces, my data: \" + JSON.stringify(this.data));\n      return this.response = this.httpService.postAccess(this.data); //.then((resp:any)=>{\n      //console.log(\"my answer: \"+JSON.stringify(resp));\n      //return resp.is;\n      //});\n    }\n\n    logAccess() {}\n\n  }\n\n  Proxy.ɵfac = function Proxy_Factory(t) {\n    return new (t || Proxy)(i0.ɵɵinject(RealSubject), i0.ɵɵinject(proxied), i0.ɵɵinject(i1.ConfigService));\n  };\n\n  Proxy.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: Proxy\n  });\n  Proxy.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [ConfigService]\n  });\n  return Proxy;\n})();\nexport function isBoardFirst(subject) {\n  console.log(subject.request());\n  return subject.request();\n}\nexport function isBoard(subject) {\n  return subject.secondRequest();\n}","map":null,"metadata":{},"sourceType":"module"}