{"ast":null,"code":"import _asyncToGenerator from \"/Users/Ihor/Projects/trellopowerapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ConfigService } from \"./services/initialize.service\";\nimport { BoardButtonDirector, BoardButtonSwitcher } from \"./shared/board-buttons\";\nimport { RealSubject, isBoardFirst, proxied, Proxy } from \"./shared/trello-init.module\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/initialize.service\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(httpService) {\n      var _this = this;\n\n      this.httpService = httpService;\n      this.title = 'AngularTrelloPowerApp';\n\n      this.BBF = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (t, opts) {\n          var director = new BoardButtonDirector();\n          var realSubject = new RealSubject();\n          var id;\n          var bid = yield t.board(\"id\");\n          console.log(\"there is board id:\");\n          console.log(bid);\n          id = bid._settledValue.id;\n          console.log(id);\n          var senddata = new proxied(id);\n          var prox = new Proxy(realSubject, senddata, _this.httpService);\n          var cond = isBoardFirst(prox); //.then((cond:any)=>{\n          //   console.log(cond);\n          //    return BoardButtonSwitcher( director , cond );\n          //});\n\n          console.log(cond);\n          return BoardButtonSwitcher(director, yield cond);\n        });\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }(); //this.httpService = new ConfigService();\n\n\n      var realSubject1 = new RealSubject();\n      var testid = new proxied(\"testid\");\n      var prox1 = new Proxy(realSubject1, testid, this.httpService);\n      var cond = isBoardFirst(prox1); //.then((cond)=>{\n      //    console.log(\"test: \"+cond);\n      //});\n\n      console.log(\"test: \" + cond);\n      var trellowind = window.TrelloPowerUp;\n      var boardbuttons = {\n        \"board-buttons\": (t, opts) => this.BBF(t, opts)\n      };\n      var showsettings = {\n        \"show-settings\": (t, opts) => this.SSF(t, opts)\n      };\n      var trelloinit = trellowind.initialize;\n      trelloinit(boardbuttons, showsettings);\n    }\n\n    SSF(t, opts) {\n      //var proxy: any;\n      //var condition = isBoard(proxy);\n      return t.boardBar({\n        url: './board-bar/board-bar.component.html',\n        args: {\n          text: 'Hello'\n        },\n        accentColor: '#F2D600',\n        height: 200,\n        callback: () => console.log('Goodbye.'),\n        resizable: true,\n        title: 'Board Meeting',\n        actions: [{\n          icon: 'https://example.com/a-white-icon.png',\n          url: 'https://google.com',\n          alt: 'Leftmost',\n          position: 'left'\n        }, {\n          icon: 'https://example.com/a-white-icon.png',\n          callback: tr => tr.popup({\n            title: tr.localizeKey('appear_in_settings'),\n            url: './settings/settings.component.html',\n            height: 164\n          }),\n          alt: 'Second from left',\n          position: 'left'\n        }, {\n          icon: 'https://example.com/a-white-icon.png',\n          callback: () => console.log(':tada:'),\n          alt: 'Right side',\n          position: 'right'\n        }]\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ConfigService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    features: [i0.ɵɵProvidersFeature([ConfigService])],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"hi\");\n      }\n    },\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}