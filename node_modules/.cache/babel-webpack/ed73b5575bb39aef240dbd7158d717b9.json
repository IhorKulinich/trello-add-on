{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ConfigService } from \"./services/initialize.service\";\nimport { BoardButtonDirector, BoardButtonSwitcher } from \"./shared/board-buttons\";\nimport { RealSubject, isBoardFirst, Proxy } from \"./shared/trello-init.module\";\nlet AppComponent = class AppComponent {\n  constructor(httpService) {\n    this.httpService = httpService;\n    this.title = 'AngularTrelloPowerApp';\n    var realSubject1 = new RealSubject();\n    var testid = {\n      \"id\": \"testid\"\n    };\n    var prox1 = new Proxy(realSubject1, testid, this.httpService);\n    var condition1 = isBoardFirst(prox1);\n    console.log(condition1);\n    var trellowind = window.TrelloPowerUp;\n    var boardbuttons = {\n      \"board-buttons\": (t, opts) => this.BBF(t, opts)\n    };\n    var showsettings = {\n      \"show-settings\": (t, opts) => this.SSF(t, opts)\n    };\n    var trelloinit = trellowind.initialize;\n    trelloinit(boardbuttons, showsettings);\n  }\n\n  BBF(t, opts) {\n    var director = new BoardButtonDirector();\n    var realSubject = new RealSubject();\n    var string;\n    var id = t.board(\"id\").then(function (board) {\n      string = JSON.stringify(board, null, 2);\n    }).then(() => {\n      id = JSON.parse(string);\n      var prox = new Proxy(realSubject, id, this.httpService);\n      var condition = isBoardFirst(prox);\n      console.log(condition);\n      return BoardButtonSwitcher(director, condition);\n    });\n  }\n\n  SSF(t, opts) {\n    //var proxy: any;\n    //var condition = isBoard(proxy);\n    return t.boardBar({\n      url: './board-bar/board-bar.component.html',\n      args: {\n        text: 'Hello'\n      },\n      accentColor: '#F2D600',\n      height: 200,\n      callback: () => console.log('Goodbye.'),\n      resizable: true,\n      title: 'Board Meeting',\n      actions: [{\n        icon: 'https://example.com/a-white-icon.png',\n        url: 'https://google.com',\n        alt: 'Leftmost',\n        position: 'left'\n      }, {\n        icon: 'https://example.com/a-white-icon.png',\n        callback: tr => tr.popup({\n          title: tr.localizeKey('appear_in_settings'),\n          url: './settings/settings.component.html',\n          height: 164\n        }),\n        alt: 'Second from left',\n        position: 'left'\n      }, {\n        icon: 'https://example.com/a-white-icon.png',\n        callback: () => console.log(':tada:'),\n        alt: 'Right side',\n        position: 'right'\n      }]\n    });\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ConfigService]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module"}