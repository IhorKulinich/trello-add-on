{"ast":null,"code":"class BoardButtonBuilder {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.product = new setBoardButtons();\n  }\n\n  setBoardButtonsUrl() {\n    this.product.parts[0].url = 'https://legalitgroup.com/poslugi-it-yuristiv/';\n    this.product.parts[0].target = 'Inspiring Boards';\n  }\n\n  setBoardButtonsCallback() {\n    this.product.parts[0].callback = this.BoardButtonsCallback;\n  }\n\n  getProduct() {\n    const result = this.product;\n    this.reset();\n    return result;\n  }\n\n  BoardButtonsCallback() {}\n\n}\n\nclass setBoardButtons {\n  constructor() {\n    this.parts = [{\n      icon: {\n        dark: \"https://example.com/a-white-icon.png\",\n        light: \"https://example.com/a-black-icon.png\"\n      },\n      text: 'by Legal IT Group',\n      condition: 'always'\n    }];\n  }\n\n}\n\nexport class BoardButtonDirector {\n  setBuilder(builder) {\n    this.builder = builder;\n  }\n\n  buildWithUrl() {\n    this.builder.setBoardButtonsUrl();\n  }\n\n  buildWithCallback() {\n    this.builder.setBoardButtonsCallback();\n  }\n\n}\nexport function BoardButtonSwitcher(director, condition) {\n  const builder = new BoardButtonBuilder();\n  director.setBuilder(builder);\n\n  switch (condition) {\n    case true:\n      director.buildWithCallback();\n      break;\n\n    case false:\n      director.buildWithUrl();\n      break;\n  }\n\n  builder.getProduct();\n}","map":null,"metadata":{},"sourceType":"module"}