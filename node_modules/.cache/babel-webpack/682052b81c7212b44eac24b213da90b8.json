{"ast":null,"code":"export class RealSubject {\n  request() {\n    return true;\n  }\n\n  secondRequest() {\n    return true;\n  }\n\n}\nexport class Proxy {\n  constructor(realSubject, prox) {\n    this.realSubject = realSubject;\n    this.data = prox;\n    this.url = \"https://script.google.com/macros/s/AKfycbxl-UnMq-kCYRbocHXMHqjluhweXs5emC10p24Qcxyx7HF7DEQ/exec\";\n  }\n\n  request() {\n    var iser = this.checkAccess();\n    console.log(\"i'm iser: \" + iser);\n\n    if (iser) {\n      console.log(\"i must call logaccess\");\n      this.logAccess();\n      return this.realSubject.request();\n    } else {\n      return false;\n    }\n  }\n\n  secondRequest() {\n    if (this.status) {\n      this.realSubject.request();\n    }\n  }\n\n  checkAccess() {\n    console.log(\"hi,i'm checkAcces, my data: \" + this.data.id);\n    var tourl = this.url;\n    var toid = JSON.stringify(this.data);\n    console.log(tourl, toid); //console.log(this.http.post(tourl,toid));\n\n    try {\n      this.response = this.http.post(tourl, toid);\n      console.log(\"my answer: \" + this.response); //this.response = this.http.get<isInTable>(this.url+this.data.id);\n\n      this.status = this.response.is; //response = JSON.stringify(response.getContentText());\n      //response.slice(response.lastIndexOf(\"is\")).substr(2, 20).includes(\"true\");\n\n      return this.status;\n    } catch (er) {\n      console.log(er);\n      return false;\n    }\n  }\n\n  logAccess() {\n    console.log(this.data.id);\n    console.log(this.response);\n    console.log(this.status);\n  }\n\n}\nexport function isBoardFirst(subject) {\n  //console.log(subject.request());\n  return subject.request();\n}\nexport function isBoard(subject) {\n  return subject.secondRequest();\n}","map":null,"metadata":{},"sourceType":"module"}