{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable, NgModule } from \"@angular/core\";\nimport { ConfigService } from \"../services/initialize.service\";\nexport class RealSubject {\n  request() {\n    return true;\n  }\n\n  secondRequest() {\n    return true;\n  }\n\n}\nlet Proxy = class Proxy {\n  constructor(realSubject, prox, httpService) {\n    this.httpService = httpService; //private http!: HttpClient;\n\n    this.url = '';\n    this.realSubject = realSubject;\n    this.data = prox;\n  }\n\n  request() {\n    var iser = this.checkAccess();\n    console.log(\"i'm iser: \" + iser);\n\n    if (iser) {\n      console.log(\"i must call logaccess\");\n      this.logAccess();\n      return this.realSubject.request();\n    } else {\n      return false;\n    }\n  }\n\n  secondRequest() {\n    if (this.status) {\n      this.realSubject.request();\n    }\n  }\n\n  checkAccess() {\n    console.log(\"hi,i'm checkAcces, my data: \" + this.data.id);\n    var toid = this.data; //console.log(this.http.post(tourl,toid));\n\n    try {\n      console.log(toid);\n      this.response = this.httpService.postAccess(toid); //.postAccess(toid);\n\n      console.log(\"my answer: \" + this.response); //this.response = this.http.get<isInTable>(this.url+this.data.id);\n\n      this.status = this.response.is; //response = JSON.stringify(response.getContentText());\n      //response.slice(response.lastIndexOf(\"is\")).substr(2, 20).includes(\"true\");\n\n      return this.status;\n    } catch (er) {\n      console.log(er);\n      return false;\n    }\n  }\n\n  logAccess() {\n    console.log(this.data.id);\n    console.log(this.response);\n    console.log(this.status);\n  }\n\n};\nProxy = __decorate([Injectable({\n  providedIn: 'root'\n}), NgModule({\n  providers: [ConfigService]\n})], Proxy);\nexport { Proxy };\nexport function isBoardFirst(subject) {\n  console.log(subject.request());\n  return subject.request();\n}\nexport function isBoard(subject) {\n  return subject.secondRequest();\n}\n/*\n@NgModule({\n  imports: [\n    BrowserModule,\n    // import HttpClientModule after BrowserModule.\n    HttpClientModule,\n  ],\n  declarations: [\n    AppComponent,\n  ]\n})\nexport class InitModule {\n\n}\n*/\n\n/*\n///////////////////////////////////////\nimport { ConfigService } from \"./http\";\n \nexport interface Subject {\n request(): void;\n secondRequest(): void;\n}\n \nexport class RealSubject implements Subject {\n public request(): boolean {\n     return true;\n }\n public secondRequest(): boolean{\n     return true;\n }\n}\n \nexport interface proxy{\n id: string;\n}\n \nexport class Proxy implements Subject {\n private realSubject: RealSubject;\n //private http!: HttpClient;\n private url: string = '';\n private status!: boolean;\n private data: proxy;\n private response!: any;\n \n constructor(realSubject: RealSubject, prox: any, private httpService: ConfigService) {\n     this.realSubject = realSubject;\n     this.data = prox;\n }\n \n public request(): boolean {\n     var iser: boolean = this.checkAccess();\n     console.log(\"i'm iser: \"+iser);\n     if (iser) {\n         console.log(\"i must call logaccess\");\n         this.logAccess();\n         return this.realSubject.request();\n     } else { return false }\n }\n \n public secondRequest(): void{\n   if (this.status) {\n       this.realSubject.request();\n   }\n }\n\n private checkAccess(): boolean {\n     console.log(\"hi,i'm checkAcces, my data: \"+this.data.id);\n     var toid = this.data;\n     //console.log(this.http.post(tourl,toid));\n     try {\n       console.log(toid);\n       this.response = this.httpService.postAccess(toid);  //.postAccess(toid);\n       console.log(\"my answer: \"+this.response);\n       //this.response = this.http.get<isInTable>(this.url+this.data.id);\n       this.status = this.response.is;\n      \n       //response = JSON.stringify(response.getContentText());\n       //response.slice(response.lastIndexOf(\"is\")).substr(2, 20).includes(\"true\");\n       return this.status;\n     } catch(er){\n       console.log(er);\n       return false;\n     }\n }\n \n private logAccess(): void{\n     console.log(this.data.id);\n     console.log(this.response);\n     console.log(this.status);\n }\n \n}\n \nexport function isBoardFirst(subject: Proxy) : boolean{\n console.log(subject.request());\n return subject.request();\n}\n \nexport function isBoard(subject: Proxy) : any{\n return subject.secondRequest();\n}\n\n*/","map":null,"metadata":{},"sourceType":"module"}